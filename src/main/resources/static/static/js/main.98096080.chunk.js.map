{"version":3,"sources":["AppNavbar.js","Home.js","ClientList.js","ClientEdit.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","props","state","isOpen","toggle","bind","this","setState","color","dark","expand","tag","Link","to","Component","Home","fluid","ClientList","alertSuccess","setTimeout","success","className","alertDanger","clients","isLoading","fetch","then","response","json","data","id","method","headers","res","status","updatedClients","filter","i","catch","err","role","clientList","map","client","style","whiteSpace","name","email","size","onClick","remove","width","regularExpression","RegExp","ClientEdit","emptyItem","validation","errors","rest","checkValidation","Object","values","forEach","val","length","history","push","item","handleChange","handleSubmit","match","params","console","log","event","target","value","test","a","preventDefault","body","JSON","stringify","saved","title","onSubmit","for","type","onChange","autoComplete","App","HashRouter","Switch","Route","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98096080.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Navbar, NavbarBrand} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class AppNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isOpen: false};\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return <Navbar color=\"dark\" dark expand=\"md\">\n            <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\n        </Navbar>;\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    <Button color=\"link\"><Link to=\"/clients\">Clients</Link></Button>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\n\nclass ClientList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {clients: [],\n            success:\"\",\n            isLoading:true\n        };\n        //this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:8081/api/')\n            .then(response => response.json())\n            .then(data =>{ \n                \n                setTimeout(()=>{this.setState({clients: data,isLoading:false})},1000)\n        });\n    }\n\n      remove(id) {\n        this.setState({isLoading:true})\n          fetch(`http://localhost:8081/api/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then((res) => {\n            if(res.status==200){\n                let updatedClients = [...this.state.clients].filter(i => i.id !== id);\n                setTimeout(()=>{this.setState({clients: updatedClients,success:true,isLoading:false})},1000)\n            }else{\n                this.setState({success: false});\n                setTimeout(()=>{this.setState({isLoading:false})},1000)\n\n\n            }\n        }).catch(err=>{\n            this.setState({success:false})\n        });\n    }\n\n\n    alertSuccess=()=>{\n\n        setTimeout(()=>{\n            this.setState({success:\"\"})\n        },4000)\n       return <div className=\"alert alert-success\">the operation passed successfully</div>\n    \n    }\n     alertDanger=()=>{\n    \n        setTimeout(()=>{\n            this.setState({success:\"\"})\n        },4000)\n       return <div className=\"alert alert-danger\">the operation has filled.</div>\n    \n    }\n    render() {\n        const {clients} = this.state;\n\n        if (this.state.isLoading) {\n            return <div className=\"spinner-border text-primary text-center\" role=\"status\">\n            <h4 className=\"visually-hidden\">Loading...</h4>\n          </div>\n          } \n\n        const clientList = clients.map(client => {\n            return <tr key={client.id}>\n                <td style={{whiteSpace: 'nowrap'}}>{client.name}</td>\n                <td>{client.email}</td>\n                <td>\n                    <ButtonGroup>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/clients/\" + client.id}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={this.remove.bind(this,client.id)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <AppNavbar/>\n               \n                <Container className=\"mt-5\" >\n                {this.state.success===true && \n                    this.alertSuccess()\n                    }  \n                    {this.state.success===false && \n                        this.alertDanger()\n                    } \n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/clients/new\">Add Client</Button>\n                    </div>\n                    <h3>Clients</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"30%\">Name</th>\n                            <th width=\"30%\">Email</th>\n                            <th width=\"40%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {clientList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default ClientList;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\n\nconst regularExpression = RegExp(/^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)\n\nclass ClientEdit extends Component {\n\n    emptyItem = {\n        name: '',\n        email: ''\n    };\n\n/**\n * \n * @param {*} props \n * \n */\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem,\n            success:\"\",\n            errors:{\n                name:\"\",\n                email:\"\"\n            }\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    /**\n     * retrive data from the server\n     */\n\n     componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n           // const client = await (await fetch(`/clients/${this.props.match.params.id}`)).json();\n           // this.setState({item: client});\n\n            fetch(`http://localhost:8081/api/${this.props.match.params.id}`).then(res=>{\n            return res.json();\n        }\n        ).then(data=>{\n            this.setState({item: data})\n            console.log(data)\n        })\n        }\n    }\n\n    /**\n     * \n     * @param {*} event \n     * handle the cahne in input fields\n     */\n\n    handleChange(event) {\n        const target = event.target;\n        const {name,value}=target;\n        let {item,errors} = this.state;\n        item[name] = value;\n\n        switch (name) {\n            case \"name\":\n                errors.name = value.length < 5 ? \"Name should be 5 characaters long\" : \"\";\n                break;\n            case \"email\":\n                errors.email = regularExpression.test(value)\n                    ? \"\"\n                    : \"Email is not valid\";\n                break;\n           \n            default:\n                break;\n        }\n        this.setState({errors,item});\n    }\n\n/**\n * \n * @param {*} event \n * @returns \n * \n * submit data to the server\n */\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        if(!this.validation(this.state)){\n            this.setState({success:false})\n            return;\n        }\n    \n        const {item} = this.state;\n        console.log(item.id)\n        \n            const saved=await fetch('http://localhost:8081/api/' + (item.id==null ? '/create' : item.id ), {\n                method: (item.id) ? 'PUT' : 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(item),\n            });\n            if(saved.status==200){\n                console.log(this.state.success)\n                if(item.id==null)\n                this.setState({item:this.emptyItem})\n\n                this.setState({success:true})\n                console.log(saved.status)\n        \n            }else{\n            this.setState({success:false})\n            console.log(\"ddd\"+saved.status)\n\n            }\n\n    }\n\n    /**\n     * @param {*} param0 \n     * @returns \n     * validate fields\n     */\n\n validation =({errors,...rest})=>{\n \n\n    let checkValidation = false;\n\n    Object.values(errors).forEach(val => {\n        if (val.length > 0) {\n            checkValidation = false\n        } else {\n            checkValidation = true\n        }\n    });\n\n    Object.values(rest).forEach(val => {\n        if (val === null) {\n            checkValidation = false\n        } else {\n            checkValidation = true\n        }\n    });\n\n    return checkValidation;\n\n\n }\n\n /**\n  * \n  * @returns \n  * \n  * alert success\n  */\n\n alertSuccess=()=>{\n\n    setTimeout(()=>{\n        this.setState({success:\"\"})\n        this.props.history.push('/clients');\n    },4000)\n   return <div className=\"alert alert-success\">the operation passed successfully</div>\n\n}\n/**\n * \n * @returns component\n * \n * alert danger\n */\n alertDanger=()=>{\n\n    setTimeout(()=>{\n        this.setState({success:\"\"})\n    },4000)\n   return <div className=\"alert alert-danger\">the operation has filled.</div>\n\n}\n\n    render() {\n        const {errors,item} = this.state;\n        const title = <h2>{item.id ? 'Edit Client' : 'Add Client'}</h2>;\n\n        return <div>\n            <AppNavbar/>\n            <Container className=\"\">\n                {title}\n                {this.state.success===true && \n                    this.alertSuccess()\n                    }  \n                    {this.state.success===false && \n                        this.alertDanger()\n                    } \n                <Form onSubmit={this.handleSubmit} className=\"needs-validation\">\n                    <FormGroup>\n                        <Label for=\"name\">Name</Label>\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={item.name }\n                               onChange={this.handleChange} autoComplete=\"name\"\n                               className={errors.name.length>0?\"is-invalid col-md-6 \" :\"col-md-6 \"}\n                               />\n                        <span className=\"invalid-feedback\">{errors.name}</span>\n\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={item.email }\n                               onChange={this.handleChange} autoComplete=\"email\" \n                               className={errors.email.length>0?\"is-invalid col-md-6\" :\"col-md-6 \"}\n                        />\n                        <span className=\"invalid-feedback\">{errors.email}</span>\n\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/clients\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n\n           \n        </div>\n    }\n}\n\nexport default ClientEdit;","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport ClientList from './ClientList';\nimport ClientEdit from \"./ClientEdit\";\n\nclass App extends Component {\n  render() {\n    return (\n        <HashRouter>\n          <Switch>\n            <Route path='/' exact={true} component={Home}/>\n            <Route path='/clients' exact={true} component={ClientList}/>\n            <Route path='/clients/:id' component={ClientEdit}/>\n          </Switch>\n        </HashRouter>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ClientList from './ClientList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}